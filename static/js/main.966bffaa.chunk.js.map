{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","className","id","type","name","placeholder","onClick","i","start","parseInt","document","getElementById","value","listnumber","Math","ceil","random","innerHTML","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6KAAe,I,MC+BAA,MA5Bf,WACE,OACE,sBAAKC,UAAU,MAAf,UACM,gFACJ,iDAEA,uBAAOC,GAAG,QAAQC,KAAK,SAASC,KAAK,QAAQC,YAAY,UAGzD,wBAAQC,QAAS,WACf,IAKIC,EALAC,EAAQC,SAASC,SAASC,eAAe,SAASC,OAIlDC,EAAa,GAEjB,IAAKN,EAAI,EAAGA,EAAIC,IAASD,EACvBM,EAAaA,EAAa,IAAMC,KAAKC,KAAKD,KAAKE,SAASR,GAG1DE,SAASC,eAAe,QAAQM,UAAYJ,GAX9C,sBAaA,uBACA,sBAAMX,GAAG,aCdAgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BO,K","file":"static/js/main.966bffaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <h1>Simple React WebSite to generate Random Number</h1>\n      <h3>How many Number</h3>\n\n      <input id=\"start\" type=\"number\" name=\"start\" placeholder=\"Start\"></input>\n      {/* <input id=\"end\" type=\"number\" name=\"end\" placeholder=\"End\"></input> */}\n\n      <button onClick={() => {\n        var start = parseInt(document.getElementById(\"start\").value);\n        // let end = parseInt(document.getElementById(\"end\").value);\n        // console.log(start);\n        // let num = end - start;\n        let listnumber = \"\";\n        let i;\n        for (i = 0; i < start; ++i){\n          listnumber = listnumber + \" \" + Math.ceil(Math.random()*start) ;\n        }\n        // console.log(listnumber);\n        document.getElementById(\"list\").innerHTML = listnumber;\n      }}>Generate</button>\n      <br></br>\n      <span id=\"list\"></span>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}